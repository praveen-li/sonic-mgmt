#####   This playbook tests Kernal ARP/GARP request and reply work as design
- block:
    - name: collect SONiC current configuration info(to find macaddress)
      setup:

    - name: copy acsbase files
      copy: src=roles/test/files/acstests
            dest=/root
      delegate_to: "{{ ptf_host }}"

    # Send correct ARP request from correct interface, expecting normal behavior
    - name: Send correct arp packets (10.10.1.3 to 10.10.1.2 with src_mac=00:06:07:08:09:0a)
      command: ptf  --test-dir acstests arptest.ExpectReply --platform remote -t "acs_mac='{{ ansible_Ethernet4['macaddress'] }}'"
      args:
        chdir: /root
      delegate_to: "{{ ptf_host }}"

    - name: Get DUT arp table
      switch_arptable:

    - name: Check SONiC ARP table and confirm macaddress and interface are correct
      assert:
        that:
          - "{{ arptable['v4']['10.10.1.3']['macaddress'] == '00:06:07:08:09:0a' }}"
          - "{{ arptable['v4']['10.10.1.3']['interface'] == 'Ethernet4' }}"

    # Test Gratuitous ARP update case, when received garp, no arp reply, update arp table if it was solved before
    - name: Send correct arp packets (10.10.1.3 to 10.10.1.2 with src_mac=00:06:07:08:09:0a)
      command: ptf  --test-dir acstests arptest.ExpectReply --platform remote -t "acs_mac='{{ ansible_Ethernet4['macaddress'] }}'"
      args:
        chdir: /root
      delegate_to: "{{ ptf_host }}"

    - name: Get DUT arp table
      switch_arptable:

    - name: Check ACS ARP table and confirm macaddress and interface are correct
      assert:
        that:
          - "{{ arptable['v4']['10.10.1.3']['macaddress'] == '00:06:07:08:09:0a' }}"
          - "{{ arptable['v4']['10.10.1.3']['interface'] == 'Ethernet4' }}"

    - pause: 
        seconds: 2

    - name: Send  garp packets to update arp table(10.10.1.3 to 10.10.1.3 with src_mac=00:00:07:08:09:0a)
      command: ptf  --test-dir acstests arptest.GarpUpdate --platform remote -t "acs_mac='{{ ansible_Ethernet4['macaddress'] }}'"
      args:
        chdir: /root
      delegate_to: "{{ ptf_host }}"

    - name: Get DUT arp table
      switch_arptable:

    - name: Check SONiC ARP table and confirm macaddress and interface are updated correctly by garp
      assert:
        that:
          - "{{ arptable['v4']['10.10.1.3']['macaddress'] == '00:00:07:08:09:0a' }}"
          - "{{ arptable['v4']['10.10.1.3']['interface'] == 'Ethernet4' }}"

  always:
    # Recover DUT interface IP Address before entering this test case
    - name: Recover DUT IP address based on minigraph
      command: /sbin/ifconfig  {{item.attachto}} {{ item.addr }}  netmask {{ item.mask }}
      become: yes
      with_items: "{{  minigraph_interfaces  }}"
      when:  (item.attachto  == 'Ethernet4' or  item.attachto == 'Ethernet8') and item.addr|ipv4
